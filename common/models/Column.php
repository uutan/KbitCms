<?php

namespace addons\KbitCms\common\models;

use common\models\base\BaseModel;
use Yii;
use Overtrue\Pinyin\Pinyin;
use common\helpers\ArrayHelper;
use common\enums\StatusEnum;

/**
 * This is the model class for table "{{%cms_column}}".
 *
 * @property int $id
 * @property int $merchant_id 商户id
 * @property int $parent_id 上级ID
 * @property int $level 级别
 * @property string $name 栏目名称
 * @property string $name_remark 副标题
 * @property string $menu_name 菜单名称
 * @property string $seo_title SEO标题
 * @property string $seo_keyword SEO关键词
 * @property string $seo_description SEO描述
 * @property int $sort 排序
 * @property string $image 栏目图片
 * @property string $model_type 模型
 * @property string $url 外部链接
 * @property int $is_nav 栏目显示[0:禁用;1启用]
 * @property int $is_blank 新页打开[0:禁用;1启用]
 * @property int $is_comment 是否留言[0:禁用;1启用]
 * @property int $status 状态[-1:删除;0:禁用;1启用]
 * @property int $created_at 创建时间
 * @property int $updated_at 修改时间
 */
class Column extends BaseModel
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return '{{%cms_column}}';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['merchant_id', 'parent_id', 'level', 'sort', 'is_nav', 'is_blank', 'is_comment', 'status', 'created_at', 'updated_at'], 'integer'],
            [['name', 'model_type'], 'required'],
            [['seo_keyword', 'seo_description', 'url'], 'string'],
            [['name', 'name_remark', 'menu_name', 'image'], 'string', 'max' => 255],
            [['seo_title'], 'string', 'max' => 500],
            [['model_type'], 'string', 'max' => 80],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'merchant_id' => '商户id',
            'parent_id' => '上级ID',
            'level' => '级别',
            'name' => '栏目名称',
            'name_remark' => '副标题',
            'menu_name' => '菜单名称',
            'seo_title' => 'SEO标题',
            'seo_keyword' => 'SEO关键词',
            'seo_description' => 'SEO描述',
            'sort' => '排序',
            'image' => '栏目图片',
            'model_type' => '模型',
            'url' => '外部链接',
            'is_nav' => '栏目显示',
            'is_blank' => '新页打开',
            'is_comment' => '是否留言',
            'status' => '状态',
            'created_at' => '创建时间',
            'updated_at' => '修改时间',
        ];
    }


    /**
     * 获取下拉
     *
     * @param string $id
     * @return array
     */
    public static function getDropDownList($id = '')
    {
        $list = self::find()
            ->where(['>=', 'status', StatusEnum::DISABLED])
            ->andFilterWhere(['<>', 'id', $id])
            ->select(['id', 'name', 'parent_id', 'level'])
            ->orderBy('parent_id asc, sort asc')
            ->asArray()
            ->all();

        $models = ArrayHelper::itemsMerge($list, 0, 'id', 'parent_id');
        $data = ArrayHelper::map(ArrayHelper::itemsMergeDropDown($models,'id','name'), 'id', 'name');
        return ArrayHelper::merge([0 => '顶级栏目'], $data);
    }



    public function getParent()
    {
        return $this->hasOne(Column::class, ['id' => 'parent_id']);
    }



    public function beforeSave($insert)
    {
        // 自动补齐菜单名称
        if( !$this->menu_name ){
            $py = new Pinyin();
            $this->menu_name = $py->permalink($this->name);
        }

        // 计算层级
        if(!$this->level){
            if($this->parent_id){
                $m = Column::findOne($this->parent_id);
                if($m){
                    $this->level = $m->level + 1;
                }
            }else{
                $this->level = 1;
            }
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }


    public function afterSave($insert, $changedAttributes)
    {

        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

}
